#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        alt_r {
            bindings = <&alt_R>;
            key-positions = <31 32>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            layers = <0 3 4>;
        };

        shift_6 {
            bindings = <&kp CARET>;
            key-positions = <6 7>;
            layers = <2>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <16 17>;
            layers = <2>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <17 18>;
            layers = <2>;
        };

        more_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <27 28>;
            layers = <2>;
        };

        prtsc {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <31 13 12>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <12 13>;
            layers = <1>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <22 23>;
            layers = <1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            layers = <0>;
        };
    };

    macros {
        alt_R: alt_R {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp R>;
            label = "ALT_R";
        };
    };

    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "ht";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "Base";
            bindings = <
&kp Q  &kp W           &kp F        &kp P             &kp G      &kp J      &kp L         &kp U        &kp Y                &kp DOT
&kp A  &ht LEFT_ALT S  &ht LCTRL R  &ht LEFT_SHIFT T  &kp D      &kp H      &ht LSHIFT N  &ht LCTRL E  &ht RIGHT_ALT I      &kp O
&kp Z  &kp X           &kp C        &kp V             &kp B      &kp M      &kp K         &kp BSPC     &ht LEFT_GUI DELETE  &kp COMMA
                                    &mo 1             &kp SPACE  &kp ENTER  &mo 2
            >;
        };

        nav_numbers {
            bindings = <
&trans  &trans  &trans    &trans        &trans     &trans     &kp N9  &kp N8  &kp N7  &trans
&trans  &trans  &kp LEFT  &kp RIGHT     &trans     &kp N0     &kp N3  &kp N2  &kp N1  &trans
&trans  &trans  &kp DOWN  &kp UP_ARROW  &trans     &trans     &kp N6  &kp N5  &kp N4  &trans
                          &trans        &kp SPACE  &kp RCTRL  &trans
            >;
        };

        frow_symbols {
            bindings = <
&none  &kp F7  &kp F8  &kp F9        &kp F12     &kp EQUAL             &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp POUND        &tog 3
&none  &kp F1  &kp F2  &kp F3        &kp F11     &kp MINUS             &kp SEMICOLON         &kp SQT                &kp ASTERISK     &kp KP_SLASH
&none  &kp F4  &kp F5  &kp F6        &kp F10     &kp NON_US_BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp QUESTION
                       &kp LEFT_ALT  &kp LSHIFT  &trans                &trans
            >;
        };

        gaming {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans
            >;
        };

        league {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans
            >;
        };
    };
};
